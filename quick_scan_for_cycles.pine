//@version=5
indicator('Quick scan for cycles', 'QSFC', timeframe = '')

source = input       (close                                                                  )
length = input       (256                                                                    )
type_  = input.int   (0         , 'Type', minval = 0, maxval = 1                             )
data   = input.string('Original',         options = ['Original', 'Differenced', 'Integrated'])

src = if data == 'Differenced'
    source - source[1]
else  if data == 'Integrated'
    ta.cum(source)
else
    source

len = length < 1 ? bar_index + 1 : length

qsfc(src, len, type_) =>
    slope   = (src - src[len]) / len
    sum     = 0.0
    dev_max = 0.0
    dev_min = 0.0

    for i = 0 to len - 1
        dev  = type_ == 0 ? math.abs(src[i] - (src - slope * i)) : src[i] - (src - slope * i)
        sum += math.abs(dev)

        dev_max := math.max(dev, dev_max)
        dev_min := math.min(dev, dev_min)

    sum / len / (dev_max - dev_min)

cycles = nz(qsfc(src, len, type_), 1)

plot(cycles, 'Cycles', color.purple, 2, plot.style_cross)

hline(type_ == 0 ? 0.3843 : 0.2491, display = display.none)
hline(type_ == 0 ? 0.4231 : 0.3104                        )
hline(type_ == 0 ? 0.5025 : 0.4550                        )
